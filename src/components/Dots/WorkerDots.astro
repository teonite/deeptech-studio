<script>
  const targetElement = document.getElementById("canvas-wrapper");

  if (targetElement) {
    const canvas = document.createElement("canvas");
    const offscreen = canvas.transferControlToOffscreen();
    targetElement.appendChild(canvas);

    const worker = new Worker(new URL("./worker-script.js", import.meta.url), {
      type: "module",
    });

    // Send the offscreen canvas and dimensions to the worker
    worker.postMessage(
      {
        canvas: offscreen,
        width: targetElement.clientWidth,
        height: targetElement.clientHeight,
      },
      [offscreen],
    );

    // Resize handler
    window.addEventListener("resize", () => {
      const width = targetElement.clientWidth;
      const height = targetElement.clientHeight;
      worker.postMessage({ type: "resize", width, height });
    });

    // Mouse move handler
    window.addEventListener("mousemove", (event) => {
      const mouseX = (event.clientX / window.innerWidth) * 2 - 1;
      const mouseY = (event.clientY / window.innerHeight) * 2 - 1;
      worker.postMessage({ type: "mousemove", mouseX, mouseY });
    });
  }
</script>

<div id="canvas-track">
  <div id="canvas-wrapper"></div>
</div>

<style lang="scss" is:global>
  #main-background {
    position: absolute;
    top: 0;
    left: 16px;
    width: calc(100% - 16px * 2);
    height: 100%;
    background-color: var(--main-background);
    z-index: 0;
    content: " ";
    display: block;

    @include b-up(lg) {
      left: var(--spacing-xl);
      width: calc(100% - var(--spacing-xl) * 2);
    }
  }

  #canvas-track {
    position: absolute;
    top: -80vh;
    left: 16px;
    width: calc(100% - 16px * 2);
    height: 150vh;
    z-index: 0;
    display: block;
    overflow: hidden;
    display: flex;
    flex-flow: column;
    align-items: center;
    justify-content: flex-start;

    @include b-up(lg) {
      left: var(--spacing-xl);
      width: calc(100% - var(--spacing-xl) * 2);
    }
  }

  #canvas-wrapper {
    width: 100%;
    max-width: calc(1920px + 10%);
    height: 150vh;
  }

  #main-wrapper {
    min-height: 150vh;
  }
</style>
