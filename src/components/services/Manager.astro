---
interface Props {
  name: string;
  role: string;
  photoUrl: string;
  ghUrl: string;
  liUrl: string;
}

const { name, role, photoUrl, ghUrl, liUrl } = Astro.props;
---

<div class="manager">
  <div class="photo" style={`background-image: url(${photoUrl})`}></div>
  <div class="content">
    <div class="description">
      <h1>{name}</h1>
      <h2>{role}</h2>
    </div>
    <div class="social">
      <a href={ghUrl}>
        <img src="/svg/github-icon-black.svg" />
      </a>
      <a href={liUrl}>
        <img src="/svg/li-icon.svg" />
      </a>
    </div>
  </div>
</div>

<style lang="scss">
  .manager {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-s);
    height: 440px;
    width: 100%;
    box-sizing: border-box;
    max-width: 478px;
    padding: var(--spacing-s);
    border-radius: var(--spacing-s);
    background: var(--secondary-surfaces);
    @include media-breakpoint-down(lg) {
      max-width: none;
      margin: 20px auto;
    }

    & > .photo {
      width: 100%;
      min-height: 256px;

      background-position: 0px 40%;
      background-size: cover;
      background-repeat: no-repeat;
      border-radius: var(--spacing-xs);
    }
    & > .content {
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      height: 100%;

      & > .description {
        display: flex;
        flex-direction: column;
        justify-content: flex-start;

        h1 {
          @include typography(paragraph);
        }

        h2 {
          @include typography(label);
        }
      }

      & > .social {
        display: flex;
        justify-content: flex-start;
        align-items: center;
        img svg {
          color: white;
        }
      }
    }
  }
</style>
